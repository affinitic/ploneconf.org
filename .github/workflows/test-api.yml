name: Test the backend code

on:
  push:
    paths:
      - "backend/**"

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
        plone-version:
          - "5.2.4"

    steps:
      - uses: actions/checkout@v2

      - name: "Set environmental variables"
        run: |
          echo "REQUIREMENTS=https://raw.githubusercontent.com/ericof/plone-pip/main/plone-${{ matrix.plone-version }}.txt" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup cache
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/.cache/plone
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ matrix.plone-version }}-${{ hashFiles('requirements/dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Create virtual environment
        run: |
          python -m venv .
          ./bin/pip install "pip==19.2.3"
          ./bin/pip install -U setuptools wheel

      - name: Install Plone
        run: |
          ./bin/pip wheel -r ${{ env.REQUIREMENTS }} -w ~/.cache/plone
          ./bin/pip install --no-deps --no-build-isolation --no-index -r ${{ env.REQUIREMENTS }} -f ~/.cache/plone

      - name: Install ploneconf.core and dependencies
        run: |
          ./bin/pip wheel -r requirements/dev.txt -w ~/.cache/wheelhouse
          ./bin/pip install "pip==19.2.3"
          ./bin/pip install --no-index -r requirements/dev.txt -f ~/.cache/wheelhouse

      - name: Run tests
        run: |
          PYTHONWARNINGS=ignore ./bin/zope-testrunner --auto-color --auto-progress --test-path src/ploneconf.core/src/

      - name: code-analysis
        run: make lint

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: api
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: plone/ploneconf-api:latest
