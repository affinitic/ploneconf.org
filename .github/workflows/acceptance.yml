name: Acceptance Tests

on:
  push:
    paths:
      - ".github/workflows/acceptance.yml"
      - "backend/**"
      - "frontend/**"


jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: backend
            file: Dockerfile.acceptance
          - image: frontend
            file: Dockerfile
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            plone/ploneconf-${{ matrix.image }}
          tags: |
            type=sha
            type=raw,value=acceptance

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.image }}
          file: ${{ matrix.image }}/${{ matrix.file }}
          tags: ${{ steps.meta.outputs.tags }}
          outputs: type=docker,dest=/tmp/${{ matrix.image }}-image.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.image }}
          path: /tmp/${{ matrix.image }}-image.tar

  acceptance-test:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download Images
        uses: actions/download-artifact@v2
        with:
          path: /tmp

      - name: Load Docker Images
        run: |
          docker load --input /tmp/backend/backend-image.tar
          docker load --input /tmp/frontend/frontend-image.tar

      - name: Install Cypress
        run: npm i cypress @testing-library/cypress cypress-file-upload cypress-axe

      - name: Cypress acceptance tests
        uses: cypress-io/github-action@v2
        env:
          BABEL_ENV: production
          CYPRESS_RETRIES: 2
        with:
          parallel: false
          browser: chrome
          spec: cypress/integration/*.js
          working-directory: frontend
          install: false
          start: |
            docker compose -f cypress/compose.yml up
          wait-on: 'npx wait-on --httpTimeout 20000 http-get://localhost:55001/plone http://localhost:3000'

  deploy:
    if: ${{ github.ref == 'refs/heads/2022' }}
    runs-on: ubuntu-latest
    environment: ploneconf.org
    needs:
      - acceptance-test
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Deploy to 2022.ploneconf.org
        run: |
          mkdir -p "$HOME/.ssh"
          printf '%s' "${{ secrets.DEPLOY_SSH }}" > "$HOME/.ssh/docker"
          chmod 600 "$HOME/.ssh/docker"
          eval $(ssh-agent)
          ssh-add "$HOME/.ssh/docker"
          printf '%s %s\n' "${{ secrets.DEPLOY_HOST }}" "${{ secrets.DEPLOY_HOST_KEY }}" >> "$HOME/.ssh/known_hosts"
          docker --host "ssh://${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:${{ secrets.DEPLOY_PORT }}" stack deploy --with-registry-auth -c devops/stacks/2022.ploneconf.org.yml plone
